diff --git a/deps/uv/src/unix/tcp.c b/deps/uv/src/unix/tcp.c
index e6db3b5..5063de8 100644
--- a/deps/uv/src/unix/tcp.c
+++ b/deps/uv/src/unix/tcp.c
@@ -60,6 +60,7 @@ static int uv__bind(uv_tcp_t* tcp,
                     int addrsize) {
   int saved_errno;
   int status;
+  int yes;
 
   saved_errno = errno;
   status = -1;
@@ -67,6 +68,19 @@ static int uv__bind(uv_tcp_t* tcp,
   if (maybe_new_socket(tcp, domain, UV_STREAM_READABLE|UV_STREAM_WRITABLE))
     return -1;
 
+  /* if node dies abruptly, make sure we can rebind the new socket */
+  yes = 1;
+  if (setsockopt(tcp->fd, SOL_SOCKET, SO_REUSEADDR, &yes, sizeof yes) == -1) {
+    uv__set_sys_error(tcp->loop, errno);
+    goto out;
+  }
+
+  /* don't allow server sockets to be inherited on fork'ed processes */
+  if (fcntl(tcp->fd, F_SETFD, fcntl(tcp->fd, F_GETFD) | FD_CLOEXEC) != 0) {
+    uv__set_sys_error(tcp->loop, errno);
+    goto out;
+  }
+
   tcp->delayed_error = 0;
   if (bind(tcp->fd, addr, addrsize) == -1) {
     if (errno == EADDRINUSE) {

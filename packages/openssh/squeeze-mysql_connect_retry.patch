diff --git a/README.mysql-keys b/README.mysql-keys
index 86671cb..07aaeee 100644
--- a/README.mysql-keys
+++ b/README.mysql-keys
@@ -133,7 +133,13 @@ MySQLUsername (string): The username to login to the MySQL server with.  No
 MySQLPassword (string): The password to login to the MySQL server with.  No
 	default.
 
-MySQLDatabase (string) The name of the database to use.  No default.
+MySQLDatabase (string): The name of the database to use.  No default.
+
+MySQLMaxTries (int): Number of tries to attempt connecting to the database.
+	Default: 3
+
+MySQLMSBetweenTries (int): Minimum number of milliseconds to sleep
+	 between database connection attempts (max 2000). Default: 100
 
 Finally, you need to populate the database with your users.  I leave that as
 an exercise for the reader, with one hint: the fingerprint of a key can be
diff --git a/mysql-keys.c b/mysql-keys.c
index 853f3cb..801b8c8 100644
--- a/mysql-keys.c
+++ b/mysql-keys.c
@@ -37,6 +37,7 @@
 #include <mysql/errmsg.h>
 #include <stdio.h>
 #include <string.h>
+#include <unistd.h>
 
 /* Return an "empty" result set, so that callers don't get too upset */
 #define MYSQL_KEYS_ERROR_RETURN  key_list = xmalloc(sizeof(mysql_key_t));	\
@@ -53,26 +54,38 @@
  */
 void mysql_keys_init(ServerOptions *opts)
 {
+	int tries = 0;
+
 	debug("[MyK] Initialising MySQL connection");
 	/* Clean up if we're recycling an existing connection */
 	if (opts->mysql_handle != NULL) {
 		debug("[MyK] Closing an existing connection");
 		mysql_close(opts->mysql_handle);
 	}
-	
+
 	opts->mysql_handle = mysql_init(NULL);
        unsigned int connect_timeout = 1;
        mysql_options(opts->mysql_handle, MYSQL_OPT_CONNECT_TIMEOUT, &connect_timeout);
-	
-	if (!mysql_real_connect(opts->mysql_handle,
-	                        opts->mysql_dbhost,
-	                        opts->mysql_dbuser,
-	                        opts->mysql_dbpass,
-	                        opts->mysql_dbname,
-	                        0, NULL, 0)) {
-		logit("[MyK] Failed to connect to MySQL server %s: %s",
-		      opts->mysql_dbhost,
-		      mysql_error(opts->mysql_handle));
+
+	while (1) {
+		if (!mysql_real_connect(opts->mysql_handle,
+		                        opts->mysql_dbhost,
+		                        opts->mysql_dbuser,
+		                        opts->mysql_dbpass,
+		                        opts->mysql_dbname,
+		                        0, NULL, 0)) {
+			logit("[MyK] Failed to connect to MySQL server %s: %s (tries=%d)",
+			      opts->mysql_dbhost,
+			      mysql_error(opts->mysql_handle),
+			      tries);
+
+			if (++tries < opts->mysql_max_tries) {
+				int entropy = rand() % 50;
+				usleep((opts->mysql_ms_between_tries+entropy)*1000*tries);
+			} else
+				break;
+		} else
+			break;
 	}
 }
 
@@ -99,9 +112,7 @@ mysql_key_t *mysql_keys_search(ServerOptions *opts, Key *key, char *username)
 	
 	if (!opts->mysql_handle) {
 		mysql_keys_init(opts);
-	}
-	
-	if (mysql_ping(opts->mysql_handle) != 0) {
+	} else if (mysql_ping(opts->mysql_handle) != 0) {
 		mysql_keys_init(opts);
 		if (mysql_ping(opts->mysql_handle) != 0) {
 			logit("[MyK] Connection to the database server failed: %s", mysql_error(opts->mysql_handle));
diff --git a/mysql-keys.h b/mysql-keys.h
index ec876ed..3617e38 100644
--- a/mysql-keys.h
+++ b/mysql-keys.h
@@ -34,6 +34,9 @@
 #include "log.h"
 #include "servconf.h"
 
+#define DEFAULT_MYSQL_MAX_TRIES 3
+#define DEFAULT_MYSQL_MS_BETWEEN_TRIES 100
+
 typedef struct mysql_key_s {
 	char   *key;
 	char   *options;
diff --git a/servconf.c b/servconf.c
index d074904..0dff5d3 100644
--- a/servconf.c
+++ b/servconf.c
@@ -141,6 +141,8 @@ initialize_server_options(ServerOptions *options)
 	options->mysql_dbpass = NULL;
 	options->mysql_dbname = NULL;
 	options->mysql_handle = NULL;
+	options->mysql_max_tries = -1;
+	options->mysql_ms_between_tries = -1;
 #endif
 }
 
@@ -296,6 +298,10 @@ fill_default_server_options(ServerOptions *options)
 #ifdef WITH_MYSQL_KEYS
 	if (options->mysql_enabled == -1)
 		options->mysql_enabled = 0;
+	if (options->mysql_max_tries == -1)
+		options->mysql_max_tries = DEFAULT_MYSQL_MAX_TRIES;
+	if (options->mysql_ms_between_tries == -1)
+		options->mysql_ms_between_tries = DEFAULT_MYSQL_MS_BETWEEN_TRIES;
 	if (options->mysql_enabled == 1
 	    && (!options->mysql_dbhost
 	        || !options->mysql_dbuser
@@ -306,6 +312,12 @@ fill_default_server_options(ServerOptions *options)
 		logit("You asked for MySQL, but didn't specify all the options.  No MySQL for you!  One year!");
 		options->mysql_enabled = 0;
 	}
+
+	if (options->mysql_ms_between_tries > 2000) {
+		logit("Invalid MySQLMSBetweenTries (max is 2000), using default of %d",
+		      DEFAULT_MYSQL_MS_BETWEEN_TRIES);
+		options->mysql_ms_between_tries = DEFAULT_MYSQL_MS_BETWEEN_TRIES;
+	}
 #endif
 
 }
@@ -343,7 +355,8 @@ typedef enum {
 	sDeprecated, sUnsupported
 #ifdef WITH_MYSQL_KEYS
 	, sUseMySQL, sMySQLServer, sMySQLUsername,
-	sMySQLPassword, sMySQLDatabase
+	sMySQLPassword, sMySQLDatabase, sMySQLMaxTries,
+	sMySQLMSBetweenTries
 #endif
 } ServerOpCodes;
 
@@ -472,6 +485,8 @@ static struct {
 	{ "MySQLUsername", sMySQLUsername, SSHCFG_GLOBAL },
 	{ "MySQLPassword", sMySQLPassword, SSHCFG_GLOBAL },
 	{ "MySQLDatabase", sMySQLDatabase, SSHCFG_GLOBAL },
+	{ "MySQLMaxTries", sMySQLMaxTries, SSHCFG_GLOBAL },
+	{ "MySQLMSBetweenTries", sMySQLMSBetweenTries, SSHCFG_GLOBAL },
 #endif
 	{ NULL, sBadOption, 0 }
 };
@@ -1401,6 +1416,16 @@ process_server_config_line(ServerOptions *options, char *line,
 		options->mysql_dbname = xstrdup(arg);
 		memset(arg, 0, strlen(arg));
 		break;
+
+	case sMySQLMaxTries:
+                intptr = &options->mysql_max_tries;
+                goto parse_int;
+		break;
+
+	case sMySQLMSBetweenTries:
+		 intptr = &options->mysql_ms_between_tries;
+                goto parse_int;
+		break;
 #endif  /* WITH_MYSQL_KEYS */
 
 	default:
diff --git a/servconf.h b/servconf.h
index d1badaa..14d1ed0 100644
--- a/servconf.h
+++ b/servconf.h
@@ -164,6 +164,8 @@ typedef struct {
 	char   *mysql_dbpass;
 	char   *mysql_dbname;
 	MYSQL  *mysql_handle;
+	int     mysql_max_tries;
+	int     mysql_ms_between_tries;
 #endif
 }       ServerOptions;
 
diff --git a/sshd_config.5 b/sshd_config.5
index 465afef..a9976f4 100644
--- a/sshd_config.5
+++ b/sshd_config.5
@@ -1085,6 +1085,11 @@ The username to use to login to the MySQL server for public key lookups.
 The password to use to login to the MySQL server for public key lookups.
 .It Cm MySQLDatabase
 The database to use for public key lookups.
+.It Cm MySQLMaxTries
+Number of tries to attempt connecting to the database.
+.It Cm MySQLMSBetweenTries
+Minimum number of milliseconds to sleep between database connection
+attempts. (max 2000)
 .El
 .Sh TIME FORMATS
 .Xr sshd 8

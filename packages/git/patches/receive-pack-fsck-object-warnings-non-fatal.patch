From 6e19a41032942f2cbe60bef41fa6e67027a55a2a Mon Sep 17 00:00:00 2001
From: Ryan Tomayko <rtomayko@gmail.com>
Date: Thu, 9 Jun 2011 19:05:29 -0700
Subject: [PATCH] receive-pack fsck object warnings are non-fatal

Makes git-unpack-objects --strict, and git-index-pack --strict treat
fsck_object() warnings as non-fatal and omits writing them to stderr
as error messages completely. Currently, warnings cause git-receive-pack
to reject pushes when receive.fsckObjects is set.

All existing warnings come from fsck_tree(). They are:

 - contains full pathnames
 - contains empty pathname
 - contains zero-padded file modes
 - contains bad file modes

fsck.c defines a default fsck_error_function() callback that's called by the
individual fsck_XXX functions to report errors and warnings. It always returns
1 regardless of severity. The default callback is actually only used from
git-unpack-objects and git-index-pack to implement the --strict checks. The
git-fsck builtin defines its own error callback and returns 0 for warnings.
This change modifies the default callback to use the same behavior as the
git-fsck command and also omits the error message output.
---
 fsck.c |    3 +++
 1 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/fsck.c b/fsck.c
index 60bd4bb..7a3313f 100644
--- a/fsck.c
+++ b/fsck.c
@@ -346,6 +346,9 @@ int fsck_object(struct object *obj, int strict, fsck_error error_func)
 
 int fsck_error_function(struct object *obj, int type, const char *fmt, ...)
 {
+	if (type == FSCK_WARN)
+		return 0;
+
 	va_list ap;
 	struct strbuf sb = STRBUF_INIT;
 
-- 
1.7.5.4

